/** Declaration file generated by dts-gen */

// import { Container, GeneratedClass } from 'travix-di';
// import { BehaviorSubject, Observable } from 'rxjs';

// export interface ProviderNames {
//   component: string;
//   container: Container;
//   store: string;
//   app: string;
//   parentApp: string;
//   rootApp: string;
//   region: string;
// }

// export interface AppOptions {
//   name: string;
//   parentApp: App;
//   providers: Container[];
//   providerNames: ProviderNames;
//   initialize?: () => void;
//   beforeDestroy?: () => void;
// }

// export interface RegisterAppOptions {
//   regions: string[];
//   weight: number;
//   multi: boolean;
// }

// export class RegisteredApp extends App implements RegisterAppOptions {
//   App: RegisteredApp;
//   name: string;
//   regions: any[];
//   instances: { [name: string] : App };
//   weight: number;
//   multi: boolean;
// }

// type Constructor<T extends App> = new(...args: any[]) => T;

// export class App {
//     constructor(args: AppOptions);

//     container: Container;

//     beforeDestroy(): any;

//     destroyApp(name: string, region?: string, regionKey?: string): boolean;

//     destroyWidget(name: string, region?: string, regionKey?: string): boolean;

//     get(providerName: string): any;

//     getAppInstance(name: string, region?: string, regionKey?: string): any;

//     getAppOnceAvailable$(name: string, region?: string, regionKey?: string): Observable<App>;

//     getApps$<T extends RegisteredApp>(regionName?: string): Observable<T[]>;

//     getContainer(): Container;

//     getOption(key: string): any;

//     getParentApp(): App;

//     getParentApps(): App[];

//     getProvider(name: string): any;

//     getProviders(): any[];

//     getRootApp(): App;

//     getWidgetInstance(name: string, region?: string, regionKey?: string): App;

//     getWidgetOnceAvailable$(name: string, region?: string, regionKey?: string): Observable<App>;

//     getWidgets$<T extends RegisteredApp>(regionName: string): Observable<T>;

//     hasAppInstance(name: string, region?: string, regionKey?: string): boolean;

//     hasWidgetInstance(name: string, region?: string, regionKey?: string): boolean;

//     instantiateApp(name: string, region?: string, regionKey?: string): RegisteredApp;

//     registerApp<T extends Constructor<App>>(AppClass: T, options?: RegisterAppOptions): void;

//     registerWidget<T extends Constructor<App>>(AppClass: T, options?: RegisterAppOptions): void;

//     frintAppName: string;

// }

// export function createApp<T extends Constructor<App>>(...args: any[]): T;
